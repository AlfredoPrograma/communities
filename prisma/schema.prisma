generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                    String  @id @default(cuid())
    userId                String
    type                  String
    provider              String
    providerAccountId     String
    refreshToken          String? @map("refresh_token")
    accessToken           String? @map("access_token")
    expiresAt             Int?    @map("expires_at")
    tokenType             String? @map("token_type")
    scope                 String?
    idToken               String? @map("id_token")
    sessionState          String? @map("session_state")
    user                  User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refreshTokenExpiresIn Int?    @map("refresh_token_expires_in")

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(uuid())
    name          String?
    email         String    @unique
    password      String
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
